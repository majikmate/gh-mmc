# Please see the documentation for all configuration options:
# https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions
#
# How to trigger a workflow:
# https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/triggering-a-workflow
#
# Conditional job execution:
# https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/using-conditions-to-control-job-execution
#
# Jobs and steps:
# https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/using-jobs-in-a-workflow
#
# Actions marketplace:
# https://github.com/marketplace?type=actions

name: Continuous Integration and Deployment
description: Runs golangci-lint, builds and tests for all supported platforms, and creates a release when a tag is pushed.

on: 
  push:
    tags:
      - v*
    branches:
      - main
  pull_request:

jobs:

  # run the linter
  lint:
    name: lint
    runs-on: ubuntu-latest
    
    permissions:
      contents: read

    steps:
      - name: checkout code
        uses: actions/checkout@v5

      - name: run the code linter
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest

  # test the code
  test:
    name: test
    needs: lint 
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    permissions:
      contents: read

    steps:
      - name: checkout code
        uses: actions/checkout@v5

      - name: setup go
        uses: ./.github/actions/setup-go

      - name: run tests
        run: go test -race ./...

  # build the code
  build:
    name: build
    needs: test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}    
    if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
    
    permissions:
      contents: read

    steps:
      - name: checkout code
        uses: actions/checkout@v5

      - name: setup go
        uses: ./.github/actions/setup-go

      - name: build
        run: go build -v .

  # create a release when a tag is pushed
  release:
    name: release
    needs: test
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') }} 

    permissions:
      contents: write
      id-token: write
      attestations: write

    steps:
      - name: checkout code
        uses: actions/checkout@v5

      - name: build and release binaries
        uses: cli/gh-extension-precompile@v2.1.0
        with:
            go_version_file: go.mod
            generate_attestations: true
